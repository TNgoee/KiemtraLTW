// <auto-generated />
using System;
using Kiemtra.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kiemtra.Migrations
{
    [DbContext(typeof(BadmintonDbContext))]
    [Migration("20250717050749_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kiemtra.Models.DoiTuyen", b =>
                {
                    b.Property<string>("MaDoi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHLV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenDoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDoi");

                    b.HasIndex("MaHLV");

                    b.ToTable("DoiTuyens");
                });

            modelBuilder.Entity("Kiemtra.Models.GiaiDau", b =>
                {
                    b.Property<string>("MaGiai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiGiai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGiai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("MaGiai");

                    b.ToTable("GiaiDaus");
                });

            modelBuilder.Entity("Kiemtra.Models.HLVTruong", b =>
                {
                    b.Property<string>("MaHLV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChuyenMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHLV");

                    b.ToTable("HLVTruongs");
                });

            modelBuilder.Entity("Kiemtra.Models.LichThiDau", b =>
                {
                    b.Property<string>("MaLich")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaGiai")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayThiDau")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLich");

                    b.HasIndex("MaGiai");

                    b.ToTable("LichThiDaus");
                });

            modelBuilder.Entity("Kiemtra.Models.TranDau", b =>
                {
                    b.Property<string>("MaTran")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KetQua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLich")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVDV1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVDV2")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVDV3")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVDV4")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VongDau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTran");

                    b.HasIndex("MaLich");

                    b.HasIndex("MaTT");

                    b.HasIndex("MaVDV1");

                    b.HasIndex("MaVDV2");

                    b.HasIndex("MaVDV3");

                    b.HasIndex("MaVDV4");

                    b.ToTable("TranDaus");
                });

            modelBuilder.Entity("Kiemtra.Models.TrongTai", b =>
                {
                    b.Property<string>("MaTT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("HeSoLuong")
                        .HasColumnType("real");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("LuongCoBan")
                        .HasColumnType("real");

                    b.Property<int>("SoTran")
                        .HasColumnType("int");

                    b.HasKey("MaTT");

                    b.ToTable("TrongTais");
                });

            modelBuilder.Entity("Kiemtra.Models.VanDongVien", b =>
                {
                    b.Property<string>("MaVDV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NamSinh")
                        .HasColumnType("int");

                    b.HasKey("MaVDV");

                    b.HasIndex("MaDoi");

                    b.ToTable("VanDongViens");
                });

            modelBuilder.Entity("Kiemtra.Models.DoiTuyen", b =>
                {
                    b.HasOne("Kiemtra.Models.HLVTruong", "HLVTruong")
                        .WithMany("DoiTuyens")
                        .HasForeignKey("MaHLV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HLVTruong");
                });

            modelBuilder.Entity("Kiemtra.Models.LichThiDau", b =>
                {
                    b.HasOne("Kiemtra.Models.GiaiDau", "GiaiDau")
                        .WithMany("LichThiDaus")
                        .HasForeignKey("MaGiai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiaiDau");
                });

            modelBuilder.Entity("Kiemtra.Models.TranDau", b =>
                {
                    b.HasOne("Kiemtra.Models.LichThiDau", "LichThiDau")
                        .WithMany("TranDaus")
                        .HasForeignKey("MaLich")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kiemtra.Models.TrongTai", "TrongTai")
                        .WithMany("TranDaus")
                        .HasForeignKey("MaTT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kiemtra.Models.VanDongVien", "VanDongVien1")
                        .WithMany()
                        .HasForeignKey("MaVDV1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kiemtra.Models.VanDongVien", "VanDongVien2")
                        .WithMany()
                        .HasForeignKey("MaVDV2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kiemtra.Models.VanDongVien", "VanDongVien3")
                        .WithMany()
                        .HasForeignKey("MaVDV3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kiemtra.Models.VanDongVien", "VanDongVien4")
                        .WithMany()
                        .HasForeignKey("MaVDV4")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LichThiDau");

                    b.Navigation("TrongTai");

                    b.Navigation("VanDongVien1");

                    b.Navigation("VanDongVien2");

                    b.Navigation("VanDongVien3");

                    b.Navigation("VanDongVien4");
                });

            modelBuilder.Entity("Kiemtra.Models.VanDongVien", b =>
                {
                    b.HasOne("Kiemtra.Models.DoiTuyen", "DoiTuyen")
                        .WithMany("VanDongViens")
                        .HasForeignKey("MaDoi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoiTuyen");
                });

            modelBuilder.Entity("Kiemtra.Models.DoiTuyen", b =>
                {
                    b.Navigation("VanDongViens");
                });

            modelBuilder.Entity("Kiemtra.Models.GiaiDau", b =>
                {
                    b.Navigation("LichThiDaus");
                });

            modelBuilder.Entity("Kiemtra.Models.HLVTruong", b =>
                {
                    b.Navigation("DoiTuyens");
                });

            modelBuilder.Entity("Kiemtra.Models.LichThiDau", b =>
                {
                    b.Navigation("TranDaus");
                });

            modelBuilder.Entity("Kiemtra.Models.TrongTai", b =>
                {
                    b.Navigation("TranDaus");
                });
#pragma warning restore 612, 618
        }
    }
}
